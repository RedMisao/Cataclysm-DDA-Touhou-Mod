[
  {
    "id": "touhou_everything_eoc",
    "type": "effect_on_condition",
    "eoc_type": "SCENARIO_SPECIFIC",
    "effect": [
      {
        "run_eocs": [
          {
            "id": "kaenbyou_starting_soulshards",
            "condition": { 
              "or": [ 
                { "u_has_trait": "KASHA_SPECIES" }, 
                { "u_has_trait": "KASHA_SPECIES_active" }
              ]
            },
            "effect": [ { "math": [ "u_var_soulshard", "+=", "2 + rand(2)" ] } ],
            "//": "Adds 2 - 4 soulshards"
          },
          {
            "id": "kokoro_stance_set",
            "condition": { "u_has_trait": "PROF_KOKORO" },
            "effect": [
              { "math": [ "var_kokoro_stance", "=", "1" ] },
              { "math": [ "var_kokoro_mask", "=", "rand(3)" ] },
              { "math": [ "var_kokoro_unstable_rnd", "=", "rand(1)" ] },
              { "run_eocs": [ "kokoro_mask_eocs" ] },
              { "run_eocs": [ "kokoro_timer_eoc" ] }
            ],
            "//": "The first EOC runs the default condition for Kokoro: 'base' stance plus random mask",
            "//2": "The second EOC runs the timer for the mask duration and automatic rotation"
          },
          {
            "id": "nitori_starting_kappascrap",
            "condition": { "u_has_trait": "PROF_NITORI" },
            "effect": [ { "math": [ "u_var_kappascrap", "+=", "20" ] } ],
            "//": "Adds 20 kappascrap"
          },
          {
            "id": "vampire_bloodthirst_start",
            "condition": { "u_has_trait": "VAMPIRE_SPECIES" },
            "effect": [
              { "math": [ "u_vitamin('hblood_vitamin')", "=", "648 + rand(72)" ] }
            ],
            "//": "Adds hblood_vitamin for VAMPIRE_SPECIES plus a smaller random amount, see vampire_bloodthirst_eoc below"
          }
        ]
      }
    ]
  },
  {
    "id": "character_falls_asleep_touhou_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_falls_asleep",
    "condition": {
      "or": [
        { "u_has_effect": "sakuya_maidsecret_effect" },
        { "u_has_effect": "udonge_barrierwave" }
      ]
    },
    "effect": [
      { "math": [ "var_sakuyafocus", "=", "0" ] },
      { "u_lose_effect": "sakuya_maidsecret_effect" },
      { "math": [ "var_barrierwave", "=", "0" ] },
      { "u_lose_effect": "udonge_barrierwave" }
    ]
  },
  {
    "id": "monster_coordinates_melee_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_melee_attacks_monster",
    "condition": {
      "or": [
        { "u_has_trait": "PROF_IKU" },
        { "u_has_trait": "PROF_KOKORO" },
        { "u_has_trait": "PROF_KASEN" },
        { "u_has_trait": "PROF_MEILING" },
        { "u_has_trait": "PROF_MOKOU" },
        { "u_has_trait": "PROF_YOUMU" }
      ]
    },
    "effect": [
      { "npc_location_variable": { "global_val": "var_target_monster_loc" } }
    ]
  },
  {
    "id": "pain_removal_eoc",
    "type": "effect_on_condition",
    "recurrence": "50 seconds",
    "deactivate_condition": { "math": [ "u_pain()", "<=", "5" ] },
    "effect": [ { "math": [ "u_pain()", "-=", "1" ] } ],
    "//": "Removes 12 pain every 5 min, which is x12 times increase in pain reduction compared to the baseline"
  },
  {
    "id": "wield_weapon_dmg_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_wields_item",
    "effect": [
      { "set_string_var": { "context_val": "itype" }, "target_var": { "global_val": "var_wield_weapon_id" } },
      {
        "u_run_inv_eocs": "all",
        "search_data": [ { "wielded_only": true } ],
        "true_eocs": [
          {
            "id": "wield_weapon_dmg_eoc2",
            "effect": [
              { "math": [ "var_melee_bash_dmg", "=", "n_melee_damage('bash')" ] },
              { "math": [ "var_melee_cut_dmg", "=", "n_melee_damage('cut')" ] },
              { "math": [ "var_melee_stab_dmg", "=", "n_melee_damage('stab')" ] },
              { "math": [ "var_melee_all_dmg", "=", "n_melee_damage('ALL')" ] },
              { "math": [ "var_melee_phys_dmg", "=", "var_melee_bash_dmg + var_melee_cut_dmg + var_melee_stab_dmg" ] },
              { "math": [ "var_gun_dmg", "=", "n_gun_damage('ALL')" ] },
              { "math": [ "var_weapon_weight_kg", "=", "( n_weight() / 1000000 )" ] }
            ]
          }
        ]
      }
    ],
    "//": "Thank you so much andrei8l for #71234 !!!",
    "//2": "Note: this is automatic but only detects wielding/unwielding actions, things like 'type: transform' from use_action don't update the values. If this becomes a problem update the value check every time the spell is cast by using the opens_spellbook event EOC instead"
  },
  {
    "id": "iku_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_IKU" },
    "effect": [
      { "math": [ "var_iku_bonus", "=", "( max( 0, u_val('dexterity') - 8 ) * 1 )" ] }
    ],
    "//": "This automatically sets the vars each time Iku opens the 'cast spell' window",
    "//2": "The var_BONUS scales with bonus DEX, relative to Iku's starting stat"
  },
  {
    "id": "kaenbyou_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_KAENBYOU" },
    "effect": [
      { "math": [ "var_immolate_dmg", "=", "( u_skill('speech') * 3 - 1 )" ] },
      { "math": [ "var_immolate_dot", "=", "( u_skill('speech') * 0.666 - 0.666 )" ] },
      { "math": [ "var_immolate_pierce", "=", "( u_skill('speech') * 0.5 - 1 )" ] },
      { "math": [ "var_immolate_dur", "=", "( u_skill('speech') * 200 + 400 )" ] }
    ],
    "//": "This automatically sets the vars each time Kaenbyou opens the 'cast spell' window",
    "//2": "The var_immolate_dmg is 11 - 29",
    "//3": "The var_immolate_dot is 2 - 6",
    "//4": "The var_immolate_pierce is 1 - 4",
    "//5": "The var_immolate_dur is 12 - 24 s"
  },
  {
    "id": "kasen_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_KASEN" },
    "effect": [
      { "math": [ "var_kasen_bonus", "=", "( max( 0, u_val('strength') - 12 ) * 1 )" ] },
      { "math": [ "var_kasen_attack", "=", "( (u_skill('unarmed') * 1.285 ) + (u_skill('dodge') * 1.285 ) + 10.286 )" ] },
      { "math": [ "var_kasen_pet_dmg", "=", "( ( u_skill('speech') ) * 2.4 + ( u_skill('dodge') ) * 2.4 + 24 )" ] },
      { "math": [ "var_rainboworb_dmg", "=", "( (u_skill('unarmed') * 3.857 ) + (u_skill('dodge') * 3.857 ) + 12.857 )" ] }
    ],
    "//": "This automatically sets the vars each time Kasen opens the 'cast spell' window",
    "//2": "The var_BONUS scales with bonus STR, relative to Kasen's starting stat",
    "//3": "The var_kasen_attack is 18 - 36, relative to a starting character's melee attack using Brawling",
    "//4": "The var_kasen_pet_dmg is 36 - 72",
    "//5": "The var_rainboworb_dmg is 36 - 90"
  },
  {
    "id": "kokoro_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_KOKORO" },
    "effect": [
      { "math": [ "var_kokoro_bonus", "=", "( max( 0, u_val('dexterity') - 8 ) * 1 )" ] },
      { "math": [ "var_kokoro_anger_mod", "=", "( 1 + var_kokoro_anger * rng( -0.2, 0.4 ) + var_kokoro_anger_boost * rng( -0.1, 0.8 ) )" ] },
      { "math": [ "var_kokoro_deter_aoe_mod", "=", "( 1 + ( var_kokoro_melancholy * ( 1/5 ) ) + ( var_kokoro_melancholy_boost * ( 1/3 ) ) )" ] },
      { "math": [ "var_kokoro_happiness_mod", "=", "( 1 - var_kokoro_happiness * rng( 0, 1/3 ) - var_kokoro_happiness_boost * rng( 0, 2/3 ) )" ] },
      { "math": [ "var_kokoro_melancholy_mod", "=", "( 1 + ( var_kokoro_melancholy * ( 1/3 ) ) + ( var_kokoro_melancholy_boost * ( 2/3 ) ) )" ] },
      { "math": [ "var_weaponspell_dmg", "=", "( (u_skill('melee') * 0.108 ) + (u_skill('dodge') * 0.108 ) + 0.033 )" ] },
      { "math": [ "var_unleashed_emotion_aoe", "=", "( (u_skill('melee') * 1.333 ) + (u_skill('dodge') * 1.333 ) - 2.666 )" ] }
    ],
    "//": "This automatically sets the vars each time Kokoro opens the 'cast spell' window. The vars are set here because they're awful to work with manually",
    "//2": "The anger mod is thus ~1.2 for the base anger stance and ~1.35 for the boosted anger stance (used as dmg mod)",
    "//3": "The deter mod is thus +20% or +33% (used as aoe only)",
    "//4": "The happiness goes thus from 1 to 66% or 33% (used as casting time and cost mod)",
    "//5": "The melancholy mod is thus +33% or +66% (used as duration mod)",
    "//6": "The var_weaponspell_dmg is 0.9 - 2.2",
    "//7": "The var_unleashed_emotion_aoe is 8 - 24"
  },
  {
    "id": "meiling_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_MEILING" },
    "effect": [
      { "math": [ "var_meiling_bonus", "=", "( max( 0, u_val('dexterity') - 8, u_val('strength') - 8 ) * 1 )" ] }
    ],
    "//": "This automatically sets the vars each time Meiling opens the 'cast spell' window",
    "//2": "The var_BONUS scales with bonus DEX/STR, whatever is higher, relative to Meiling's starting stats"
  },
  {
    "id": "mokou_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_MOKOU" },
    "effect": [
      { "math": [ "var_mokou_bonus", "=", "( max( 0, u_val('strength') - 8 ) * 1 )" ] },
      { "math": [ "var_mokou_attack", "=", "( u_skill('melee') * 0.666 + u_skill('unarmed') * 0.666 + 2.666 )" ] },
      { "math": [ "var_mokou_talons", "=", "( (u_skill('melee') * 2.166 ) + (u_skill('unarmed') * 2.166 ) - 0.333 )" ] }
    ],
    "//": "This automatically sets the vars each time Mokou opens the 'cast spell' window",
    "//2": "The var_BONUS scales with bonus STR, relative to Mokou's starting stat",
    "//3": "The var_mokou_attack is 8 - 16, as bonus of ~20 (tested the pre-spell tec, base skills, and it did ~20, min 11 max 31)",
    "//4": "The var_mokou_talons is 17 - 43"
  },
  {
    "id": "nitori_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_NITORI" },
    "effect": [
      { "math": [ "var_extendo_arm_range", "=", "( u_skill('mechanics') * 1.666 - 1.666 )" ] },
      { "math": [ "var_toolswing_dmg", "=", "( (u_skill('mechanics') * 0.15 ) + 0.5 )" ] }
    ],
    "//": "This automatically sets the vars each time Mokou opens the 'cast spell' window",
    "//2": "The var_extendo_arm_range is 5 - 15",
    "//3": "The var_toolswing_dmg is 1.1 - 2"
  },
  {
    "id": "remi_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_REMI" },
    "effect": [
      { "math": [ "var_darkdrain_dmg", "=", "( (u_skill('stabbing') * 2.22 ) + (u_skill('melee') * 2.22 ) + (u_skill('dodge') * 2.22 ) - 6.66 )" ] }, 
      { "math": [ "var_darkdrain_range", "=", "( (u_skill('stabbing') * 0.222 ) + (u_skill('melee') * 0.222 ) + (u_skill('dodge') * 0.222 ) + 1.333 )" ] }, 
      { "math": [ "var_gungnir_dur", "=", "( (u_skill('stabbing') * 3500 ) + (u_skill('melee') * 3500 ) - 10000 )" ] }, 
      { "math": [ "var_gungnir_dmg", "=", "( (u_skill('stabbing') * 20 ) + (u_skill('melee') * 20 ) - 120 )" ] } 
    ],
    "//": "This automatically sets the vars each time Remi opens the 'cast spell' window",
    "//2": "The var_darkdrain_dmg is 20 - 60",
    "//3": "The var_darkdrain_range is 4 - 8",
    "//4": "The var_gungnir_dur is 180 - 600 s",
    "//5": "The var_gungnir_dmg is 40 - 280"
  },
  {
    "id": "sakuya_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_SAKUYA" },
    "effect": [
      { "math": [ "var_sakuyaradius", "=", "max( 4, ( - (u_skill('stabbing') * 0.5 ) - (u_skill('dodge') * 0.5 ) + 17.5 ) )" ] }
    ],
    "//": "This automatically sets the vars each time Sakuya opens the 'cast spell' window",
    "//2": "The var_RADIUS is set to 14 - 4 tiles, scaling down with higher (stabbing + dodge)"
  },
  {
    "id": "seiga_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_SEIGA" },
    "effect": [
      { "u_location_variable": { "global_val": "var_seiga_loc" }, "min_radius": 1, "max_radius": 3, "passable_only": true },
      { "math": [ "var_seiga_range", "=", "( (u_skill('speech') * 0.333 ) + (u_skill('firstaid') * 0.333 ) + 1.333 )" ] },
      { "math": [ "var_seiga_minion_scaling_1", "=", "( 1 + ( u_skill('dodge') * 0.0714 ) + ( u_skill('firstaid') * 0.0714 ) - 0.428 )" ] },
      { "math": [ "var_seiga_minion_scaling_2", "=", "( 1 + ( u_skill('speech') * 0.111 ) + ( u_skill('firstaid') * 0.111 ) - 0.888 )" ] }
    ],
    "//": "This automatically sets the vars each time Seiga opens the 'cast spell' window",
    "//2": "The var_seiga_range is 4 - 8",
    "//3": "The var_seiga_minion_scaling_1 is 1 - 2, used as multiplier for Yoshika's spells",
    "//4": "The var_seiga_minion_scaling_2 is 1 - 2.33, used as multiplier for Yoshika's spells"
  },
  {
    "id": "tenko_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_TENKO" },
    "effect": [
      { "math": [ "var_tenko_bonus", "=", "( max( 0, u_val('strength') - 8 ) * 1 )" ] }
    ],
    "//": "This automatically sets the vars each time Tenko opens the 'cast spell' window",
    "//2": "The var_BONUS scales with bonus STR, relative to Tenko's starting stat"
  },
  {
    "id": "tenko_celestial_stance_1_eoc",
    "type": "effect_on_condition",
    "required_event": "character_gains_effect",
    "eoc_type": "EVENT",
    "condition": { "compare_string": [ "mabuff:buff_celestial_brawling_tenko_static", { "context_val": "effect" } ] },
    "effect": [ { "u_add_trait": "celestial_stance_mut" } ]
  },
  {
    "id": "tenko_celestial_stance_2_eoc",
    "type": "effect_on_condition",
    "required_event": "character_loses_effect",
    "eoc_type": "EVENT",
    "condition": { "compare_string": [ "mabuff:buff_celestial_brawling_tenko_static", { "context_val": "effect" } ] },
    "effect": [ { "u_lose_trait": "celestial_stance_mut" } ]
  },
  {
    "id": "utsuho_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_OKUU" },
    "effect": [
      { "math": [ "var_blacksun_dur", "=", "( (u_skill('dodge') * 1500 ) + 9000 )" ] },
      { "math": [ "var_fissionaura_dmg", "=", "( (u_skill('dodge') * 1.75 ) + 3.5 )" ] },
      { "math": [ "var_hellcannon_dmg", "=", "( (u_skill('dodge') * 33 ) - 33 )" ] },
      { "math": [ "var_hellcannon_range", "=", "( (u_skill('dodge') * 1.5 ) + 6 )" ] },
      { "math": [ "var_utsuho_nuke", "=", "( (u_skill('dodge') * 37.5 ) + 45 )" ] },
      { "math": [ "var_ugeyser_dmg", "=", "( (u_skill('dodge') * 5.625 ) + 18.75 )" ] },
      { "math": [ "var_ugeyser_pierce", "=", "( (u_skill('dodge') * 1.5 ) + 4 )" ] }
    ],
    "//": "This automatically sets the vars each time Utsuho opens the 'cast spell' window",
    "//2": "The var_blacksun_dur is 120 - 240 s",
    "//3": "The var_fissionaura_dmg is 7 - 21 (every 3 s)",
    "//4": "The var_hellcannon_dmg is 33 - 297",
    "//5": "The var_hellcannon_range is 9 - 24",
    "//6": "The var_utsuho_nuke is 120 - 420",
    "//7": "The var_ugeyser_dmg is 30 - 75",
    "//8": "The var_ugeyser_pierce is 7 - 19"
  },
  {
    "id": "yamame_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_YAMAME" },
    "effect": [
      { "math": [ "var_disease_dur", "=", "( (u_skill('speech') * 46.153 ) + (u_skill('dodge') * 46.153 ) + 1176.923 )" ] },
      { "math": [ "var_disease_range", "=", "( (u_skill('speech') * 0.615 ) + (u_skill('dodge') * 0.615 ) + 3.692 )" ] },
      { "math": [ "var_icypyrexia_dot", "=", "( (u_skill('speech') * 0.23075 ) + (u_skill('dodge') * 0.23075 ) + 0.3846 )" ] },
      { "math": [ "var_scarletplague_dot", "=", "( (u_skill('speech') * 0.23075 ) + (u_skill('dodge') * 0.23075 ) + 0.3846 )" ] },
      { "math": [ "var_volatilerot_dot", "=", "( (u_skill('speech') * 0.23075 ) + (u_skill('dodge') * 0.23075 ) + 0.3846 )" ] },
      { "math": [ "var_miasmar_dmg", "=", "( (u_skill('speech') * 3.076 ) + (u_skill('dodge') * 3.076 ) + 3.461 )" ] },
      { "math": [ "var_damnedrope_range", "=", "( (u_skill('fabrication') * 0.923 ) + (u_skill('tailor') * 0.923 ) + 1.538 )" ] }
    ],
    "//": "This automatically sets the vars each time Yamame opens the 'cast spell' window",
    "//2": "Note: also tried chaining a subpsell for yamame_miasmaepidemic with 'self' EOC but it didn't trigger (for her)",
    "//3": "The var_disease_dur is 15 - 21 s",
    "//4": "The var_disease_range is 8 - 16",
    "//5": "The var_DISEASE_dot is 2 - 5",
    "//6": "The var_miasmar_dmg is 25 - 65",
    "//7": "The var_damnedrope_range is 8 - 20"
  },
  {
    "id": "youmu_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_YOUMU" },
    "effect": [
      { "u_location_variable": { "global_val": "var_youmu_loc" }, "min_radius": 1, "max_radius": 2, "passable_only": true },
      { "math": [ "var_youmu_bonus", "=", "( max( 0, u_val('dexterity') - 8, u_val('perception') - 8 ) * 1 )" ] },
      { "math": [ "var_slasheternal_dmg", "=", "( ( var_melee_all_dmg * ( (u_skill('cutting') * 0.0909 ) + (u_skill('dodge') * 0.0909 ) + 0.1818 ) ) / 5 )" ] },
      { "math": [ "var_slashnether_dmg", "=", "( var_melee_all_dmg * ( (u_skill('cutting') * 0.1818 ) + (u_skill('dodge') * 0.1818 ) - 0.6363 ) )" ] },
      { "math": [ "var_slashnether_pierce", "=", "( var_melee_all_dmg / 3 )" ] },
      { "math": [ "var_slashnether_range", "=", "( (u_skill('cutting') * 0.7272 ) + (u_skill('dodge') * 0.7272 ) - 2.5454 )" ] },
      { "math": [ "var_slasheternal2_dur", "=", "( (u_skill('cutting') * 1272.72 ) + (u_skill('dodge') * 1272.72 ) - 4454.54 )" ] },
      { "math": [ "var_slashnether2_dmg", "=", "( var_melee_all_dmg / 6 )" ] }
    ],
    "//": "This automatically sets the vars each time Youmu opens the 'cast spell' window",
    "//2": "The var_BONUS scales with bonus DEX/PER, whatever is higher, relative to Youmu's starting stats",
    "//3": "The var_slasheternal_dmg is x1 - 2 weapon dmg / 5. The spell repeats that value 3 - 7 times",
    "//4": "The var_slashnether_dmg is x1 - 3 weapon dmg",
    "//5": "The var var_slashnether_range is 4 - 12",
    "//6": "The var_slasheternal2_dur is 7 - 21 s"
  },
  {
    "id": "kaenbyou_vspossess_kill_monster_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_kills_monster",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_KAENBYOU" },
        { "math": [ "n_var_vspossess", ">", "0" ] }
      ]
    },
    "effect": [
      { "math": [ "n_var_vspossess", "=", "0" ] },
      { "npc_location_variable": { "global_val": "var_vspossess_loc" } },
      {
        "run_eocs": [
          {
            "id": "kaenbyou_vspossess_kill_monster_check_1",
            "condition": { "math": [ "monsters_nearby('mon_vengeful_spirit', 'location': var_vspossess_loc, 'radius': 3, 'attitude': 'friendly')", ">", "0" ] },
            "effect": [ 
              { 
                "run_eocs": [
                  {
                    "id": "kaenbyou_vspossess_kill_monster_check_2",
                    "condition": { "math": [ "monsters_nearby('mon_vengeful_spirit', 'location': var_vspossess_loc, 'radius': 3, 'attitude': 'friendly')", "==", "1" ] },
                    "effect": [ 
                      { "u_cast_spell": { "id": "kaenbyou_vspossess2" }, "loc": { "global_val": "var_vspossess_loc" } },
                      {
                        "u_spawn_monster": "mon_vengeful_posessed",
                        "real_count": 1,
                        "min_radius": 0,
                        "max_radius": 2,
                        "friendly": true,
                        "spawn_message": "A nearby vengeful spirit takes control!",
                        "spawn_message_plural": "",
                        "target_var": { "global_val": "var_vspossess_loc" }
                      }
                    ]
                  },
                  {
                    "id": "kaenbyou_vspossess_kill_monster_check_3",
                    "condition": { "math": [ "monsters_nearby('mon_vengeful_spirit', 'location': var_vspossess_loc, 'radius': 3, 'attitude': 'friendly')", ">", "1" ] },
                    "effect": [ 
                      { "u_cast_spell": { "id": "kaenbyou_vspossess2" }, "loc": { "global_val": "var_vspossess_loc" } },
                      {
                        "u_spawn_monster": "mon_vengeful_chasm",
                        "real_count": 1,
                        "min_radius": 0,
                        "max_radius": 2,
                        "friendly": true,
                        "spawn_message": "Nearby vengeful spirits take control, fusing together!",
                        "spawn_message_plural": "",
                        "target_var": { "global_val": "var_vspossess_loc" }
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "//": "If Kaenbyou kills a monster, and the monster was tagged by kaenbyou_vspossess , and there are nearby vss, she spawns one of two monsters depending on the number of nearby vss",
    "//2": "This can't be just copied for character_kills_character as there's some beta talker issue",
    "//3": "Seems dots from spells are not proccing character_kills_monster events (#71408)"
  },
  {
    "id": "kappa_diet_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_eats_item",
    "condition": {
      "and": [
        { "u_has_trait": "KAPPA_SPECIES" },
        {
          "or": [
            { "compare_string": [ "cucumber", { "context_val": "itype" } ] },
            { "compare_string": [ "cucumber_cut", { "context_val": "itype" } ] },
            { "compare_string": [ "sandwich_cucumber", { "context_val": "itype" } ] }
          ]
        }
      ]
    },
    "effect": [ 
      { "u_add_morale": "morale_cucumber", "bonus": 13, "max_bonus": 39 }
    ],
    "//": "Simplified version of vampire_hblood_food_eoc ",
    "//2": "The u_add_morale effect default is 1 h, decay_start 30 m, successive bonus give sqrt(n*bonus)"
  },
  {
    "id": "kasen_parry_hit_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_takes_damage",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_KASEN" },
        { "math": [ "u_var_kasenparry", ">", "0" ] }
      ]
    },
    "effect": [ 
      { "u_lose_effect": "parry_effect" },
      { "math": [ "u_var_kasenparry", "=", "0" ] },
      { "u_cast_spell": { "id": "kasen_parry2", "message": "You parry!" }, "targeted": true }
    ],
    "//": "Similar to meiling_mountainbreak_hit_eoc . This should be above kasen_calorieburn_dmg so it can be run first",
    "//2": "The dodge-detection component is at buff_kasen_ondodge_eoc "
  },
  {
    "id": "kasen_calorieburn_dmg",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_takes_damage",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_KASEN" },
        { "math": [ "var_kasencalorieburn", ">", "0" ] }
      ]
    },
    "effect": [ 
      { "math": [ "var_kasencalorieburn", "+=", "1" ] }
    ]
  },
  {
    "id": "kokoro_timer_eoc",
    "type": "effect_on_condition",
    "recurrence": "15 s",
    "condition": { "u_has_trait": "PROF_KOKORO" },
    "deactivate_condition": { "not": { "u_has_trait": "PROF_KOKORO" } },
    "effect": [ 
      { "math": [ "var_kokoro_timer", "-=", "15" ] },
      { "run_eocs": [ "kokoro_instability_check_eoc" ] }
    ],
    "//": "Reduces var_kokoro_timer every 15 s and checks if she has enough instability"
  },
  {
    "id": "meiling_mountainbreak_hit_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_takes_damage",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_MEILING" },
        { "math": [ "u_var_mountainbreak", ">", "0" ] }
      ]
    },
    "effect": [ 
      { "u_lose_effect": "parry_effect" },
      { "math": [ "u_var_mountainbreak", "=", "0" ] },
      { "u_cast_spell": { "id": "meiling_mountainbreak2", "message": "You strike back!" }, "targeted": true }
    ],
    "//": "Simplified version of udonge_barrierwave_hit_eoc . It checks if Meiling has casted Mountain breaking cannon. If that's the case it resets the var and casts the spell",
    "//2": "The dodge-detection component is at buff_meiling_ondodge_eoc "
  },
  {
    "id": "mokou_death_eoc",
    "type": "effect_on_condition",
    "eoc_type": "PREVENT_DEATH",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_MOKOU" },
        { "math": [ "var_mokoudeath", "<", "rand(504)" ] }
      ]
    },
    "effect": [
      { "u_message": "Too bad you can't actually die for good.", "popup": true },
      "u_prevent_death",
      { "u_lose_trait": "PORTAL_RESURRECTION" },
      { "u_add_effect": "mokou_resurrectcleanse", "duration": "6 s" },
      { "math": [ "var_mokoudeath", "+=", "168" ] },
      { "math": [ "u_hp('ALL')", "=", "100" ] },
      { "math": [ "u_val('sleepiness')", "=", "0" ] },
      { "math": [ "u_val('mana')", "=", "800" ] },
      { "math": [ "u_val('stamina')", "=", "8500" ] },
      { "math": [ "u_pain()", "=", "0" ] },
      { "u_add_effect": "mokou_resurrectpain", "duration": "168 hours" },
      { "u_cast_spell": { "id": "mokou_resurrectionphoenix" }, "targeted": false },
      { "run_eocs": [ "mokou_resurrect_counter_eoc" ] }
    ],
    "//": "This EOC enables PROF_MOKOU to resurrect/revive. Every time Mokou dies she gets var_mokoudeath, which lasts for 7 days and decreases slowly over time. Every time she revives, the value is checked vs a random number, so the more she dies in a short time the harder it is for her to not give up for real",
    "//2": "ANY trait that revives the character should be lost every time Mokou dies. So far, it's just PORTAL_RESURRECTION "
  },
  {
    "id": "mokou_resurrect_counter_eoc",
    "type": "effect_on_condition",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_MOKOU" },
        { "math": [ "var_mokoudeath", ">", "0" ] }
      ]
    },
    "effect": [ 
      { "math": [ "var_mokoudeath", "-=", "1" ] },
      { "run_eocs": [ "mokou_resurrect_counter_eoc" ], "time_in_future": "1 h" }
    ],
    "//": "Reduces var_mokoudeath over time"
  },
  {
    "id": "nitori_melee_attack_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_melee_attacks_monster",
    "condition": { "u_has_trait": "PROF_NITORI" },
    "effect": [
      { "set_string_var": { "context_val": "victim_type" }, "target_var": { "global_val": "victim_type" } },
      {
        "run_eocs": [
          {
            "id": "nitori_melee_attack_turret_eoc",
            "condition": { "compare_string": [ "mon_kappa_turret", { "context_val": "victim_type" } ] },
            "effect": [
              { "math": [ "var_nitori_repair", "=", "( var_melee_phys_dmg )" ] },
              { "npc_cast_spell": { "id": "nitori_repair_spell" } }
            ]
          }
        ]
      }
    ],
    "//WIP": ""
  },
  {
    "id": "sakuya_maidsecret_melee_attacks_character_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_melee_attacks_character",
    "condition": { "u_has_effect": "sakuya_maidsecret_effect" },
    "effect": [ { "run_eocs": [ "sakuya_maidsecret_end_eoc" ] } ]
  },
  {
    "id": "sakuya_maidsecret_melee_attacks_monster_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_melee_attacks_monster",
    "condition": { "u_has_effect": "sakuya_maidsecret_effect" },
    "effect": [ { "run_eocs": [ "sakuya_maidsecret_end_eoc" ] } ]
  },
  {
    "id": "sakuya_maidsecret_ranged_attacks_character_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_ranged_attacks_character",
    "condition": { "u_has_effect": "sakuya_maidsecret_effect" },
    "effect": [ { "run_eocs": [ "sakuya_maidsecret_end_eoc" ] } ]
  },
  {
    "id": "sakuya_maidsecret_ranged_attacks_monster_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_ranged_attacks_monster",
    "condition": { "u_has_effect": "sakuya_maidsecret_effect" },
    "effect": [ { "run_eocs": [ "sakuya_maidsecret_end_eoc" ] } ]
  },
  {
    "id": "sakuya_maidsecret_hit_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_takes_damage",
    "condition": { "u_has_effect": "sakuya_maidsecret_effect" },
    "effect": [ { "run_eocs": [ "sakuya_maidsecret_end_eoc" ] } ]
  },
  {
    "id": "seiga_corpsecursed_kill_monster_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_kills_monster",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_SEIGA" },
        { "npc_has_effect": "seiga_corpsecurse_effect" }
      ]
    },
    "effect": [
      { "npc_location_variable": { "global_val": "var_corpsecursed_loc" } },
      { "npc_lose_effect": "seiga_corpsecurse_effect" },
      {
        "run_eocs": [
          {
            "id": "seiga_corpsecursed_kill_monster_check_1",
            "condition": {
              "or": [
                { "compare_string": [ "mon_zombie_anklebiter", { "context_val": "victim_type" } ] },
                { "compare_string": [ "mon_zombie_child", { "context_val": "victim_type" } ] },
                { "compare_string": [ "mon_zombie_creepy", { "context_val": "victim_type" } ] },
                { "compare_string": [ "mon_zombie_shriekling", { "context_val": "victim_type" } ] },
                { "compare_string": [ "mon_zombie_snotgobbler", { "context_val": "victim_type" } ] },
                { "compare_string": [ "mon_zombie_sproglodyte", { "context_val": "victim_type" } ] },
                { "compare_string": [ "mon_zombie_waif", { "context_val": "victim_type" } ] },
                { "compare_string": [ "mon_zombie_wretch", { "context_val": "victim_type" } ] }
              ]
            },
            "effect": [
              {
                "u_spawn_monster": "mon_risen_child_seiga",
                "real_count": 1,
                "min_radius": 0,
                "max_radius": 1,
                "friendly": true,
                "spawn_message": "The soul of your victim erupts from its corpse!",
                "spawn_message_plural": "The souls of your victims erupts from their corpses!",
                "target_var": { "global_val": "var_corpsecursed_loc" }
              }
            ],
            "false_effect": [
              {
                "run_eocs": [
                  {
                    "id": "seiga_corpsecursed_kill_monster_check_2",
                    "condition": {
                      "or": [
                        {
                          "or": [
                            { "npc_has_species": "FERAL" },
                            { "npc_has_species": "HUMAN" },
                            { "npc_has_species": "ZOMBIE" }
                          ]
                        },
                        {
                          "or": [
                            { "compare_string": [ "mon_mutant_alpha", { "context_val": "victim_type" } ] },
                            { "compare_string": [ "mon_mutant_alpha_boss", { "context_val": "victim_type" } ] },
                            { "compare_string": [ "mon_mutant_antler", { "context_val": "victim_type" } ] },
                            { "compare_string": [ "mon_mutant_arthropod", { "context_val": "victim_type" } ] },
                            { "compare_string": [ "mon_mutant_camouflaged", { "context_val": "victim_type" } ] },
                            { "compare_string": [ "mon_mutant_evolved", { "context_val": "victim_type" } ] },
                            { "compare_string": [ "mon_mutant_experimental", { "context_val": "victim_type" } ] },
                            { "compare_string": [ "mon_mutant_mollusk", { "context_val": "victim_type" } ] }
                          ]
                        }
                      ]
                    },
                    "effect": [
                      {
                        "u_spawn_monster": { "context_val": "victim_type" },
                        "real_count": 1,
                        "min_radius": 0,
                        "max_radius": 1,
                        "friendly": true,
                        "spawn_message": "Dark energies engulf your victim, quickly healing their wounds!",
                        "spawn_message_plural": "Dark energies engulf your victims, quickly healing their wounds!",
                        "target_var": { "global_val": "var_corpsecursed_loc" }
                      }
                    ],
                    "false_effect": [
                      {
                        "run_eocs": [
                          {
                            "id": "seiga_corpsecursed_kill_monster_check_3",
                            "condition": {
                              "or": [
                                { "math": [ "n_volume()", ">=", "65000" ] },
                                { "math": [ "n_weight()", ">=", "65000" ] }
                              ]
                            },
                            "effect": [ 
                              {
                                "u_spawn_monster": "mon_disgrace_seiga",
                                "real_count": 1,
                                "min_radius": 0,
                                "max_radius": 1,
                                "friendly": true,
                                "spawn_message": "Your victim warps as life leaves its body, turning into a monstrosity!",
                                "spawn_message_plural": "Your victims warp as life leaves their bodies, turning into monstrosities!",
                                "target_var": { "global_val": "var_corpsecursed_loc" }
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ],
    "//": "Checks if Seiga's target is a monster and is cursed, if so it revives it as an ally, depending on the monster's characteristics",
    "//2": "The priority is child > zombie/human mutant > whatever else with at least 65 L or kg",
    "//3": "It spawns a risen child, the same zombie/human mutant, or a disgrace, respectively",
    "//4": "Adapted from the now reverted #71702",
    "//5": "This can't be just copied for character_kills_character as there's some beta talker issue"
  },
  {
    "id": "seiga_death_eoc",
    "type": "effect_on_condition",
    "eoc_type": "PREVENT_DEATH",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_SEIGA" },
        { "u_has_effect": "seiga_shikaisen_effect" }
      ]
    },
    "effect": [
      { "u_message": "The safeguard you prepared activates, instantly swapping identities." },
      "u_prevent_death",
      { "u_lose_trait": "PORTAL_RESURRECTION" },
      { "u_lose_effect": "seiga_shikaisen_effect" },
      { "u_teleport": { "global_val": "var_seiga_revive_loc" }, "force": true },
      { "math": [ "u_hp('ALL')", "=", "100" ] },
      { "math": [ "u_val('sleepiness')", "=", "0" ] },
      { "math": [ "u_val('mana')", "=", "800" ] },
      { "math": [ "u_val('stamina')", "=", "8500" ] },
      { "math": [ "u_pain()", "=", "0" ] },
      {
        "run_eocs": [
          {
            "id": "seiga_revive_eoc",
            "effect": [
              { "u_cast_spell": { "id": "seiga_shikaisenritual3" }, "loc": { "global_val": "var_shikaisenritual_loc" } },
              { "message": "The replacement is broken.", "type": "mixed" }
            ]
          }
        ],
        "time_in_future": "1 s"
      }
    ],
    "//": "This EOC enables PROF_SEIGA to resurrect/revive, if she has performed the Body Replacement ritual (which grants the effect)",
    "//2": "It removes the effect, resets her stats (because the alternative is to take snapshots every X min but that would doom her under certain circumstances)",
    "//3": "It also resets her pain, else she's crippled with 0 stats post-revival. It teleports her to where the ritual was performed, and removes the custom bed",
    "//4": "ANY trait that revives the character should be lost every time Seiga dies. So far, it's just PORTAL_RESURRECTION "
  },
  {
    "id": "soulshard_from_character_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_kills_character",
    "condition": {
      "and": [ 
        { 
          "or": [ 
            { "u_has_trait": "KASHA_SPECIES" }, 
            { "u_has_trait": "KASHA_SPECIES_active" }
          ]
        },
        { "math": [ "u_var_soulshard", "<", "16" ] }
      ]
    },
    "effect": [ 
      { "math": [ "u_var_soulshard", "+=", "1" ] },
      { "u_message": "You gained a soulshard", "type": "mixed" }
    ],
    "//": "Simple EOC checks when a Kasha kills characters (avatars and npcs), if it's humanoid or close enough it adds the u_var "
  },
  {
    "id": "soulshard_from_monster_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_kills_monster",
    "condition": {
      "and": [ 
        { 
          "or": [ 
            { "u_has_trait": "KASHA_SPECIES" }, 
            { "u_has_trait": "KASHA_SPECIES_active" }
          ]
        },
        { 
          "or": [ 
            { "npc_has_species": "FERAL" }, 
            { "npc_has_species": "HUMAN" }, 
            { "npc_has_species": "NETHER" }, 
            { "npc_has_species": "ZOMBIE" } 
          ] 
        },
        { "math": [ "u_var_soulshard", "<", "16" ] }
      ]
    },
    "effect": [ 
      { "math": [ "u_var_soulshard", "+=", "1" ] },
      { "u_message": "You gained a soulshard", "type": "mixed" }
    ],
    "//": "Simple EOC checks when a Kasha kills monsters, if it's humanoid or close enough it adds the u_var ",
    "//2": "For balancing purposes, ZOMBIES drop soul shards, otherwise Kaenbyou is forced to go murderhobo on humans (are there that many humans left too? they're non-renewable fuel now)"
  },
  {
    "id": "udonge_barrierwave_hit_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_takes_damage",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_UDONGE" },
        { "u_has_effect": "udonge_barrierwave" },
        { "math": [ "var_barrierwave", ">", "0" ] }
      ]
    },
    "effect": [ 
      { "math": [ "var_barrierwave", "-=", "1" ] },
      { "run_eocs": [ "udonge_barrierwave_hit2" ] }
    ],
    "//": "This EOC checks if Udonge has the barrierwave effect and at least one charge of it. If that's the case it reduces the charge by one and runs the following EOC",
    "//2": "The on-being-hit vfx is handled by the effect itself",
    "//3": "Currently there's a bug #72281 that makes the vfx not proc when hit by ranged attacks. The FORCEFIELD effect still works despite that"
  },
  {
    "id": "udonge_barrierwave_hit2",
    "type": "effect_on_condition",
    "condition": { "math": [ "var_barrierwave", "==", "0" ] },
    "effect": [ 
      { "u_lose_effect": "udonge_barrierwave" }
    ]
  },
  {
    "id": "udonge_barrierwave_game_load",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "game_load",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_UDONGE" },
        { "u_has_effect": "udonge_barrierwave" }
      ]
    },
    "effect": [
      { "math": [ "var_barrierwave", "=", "0" ] },
      { "u_lose_effect": "udonge_barrierwave" }
    ],
    "//": "This is just here because it works like that in TH15 (which means it's canon)"
  },
  {
    "id": "vampire_bloodthirst_eoc",
    "type": "effect_on_condition",
    "recurrence": "30 m",
    "condition": { "u_has_trait": "VAMPIRE_SPECIES" },
    "deactivate_condition": { "not": { "u_has_trait": "VAMPIRE_SPECIES" } },
    "effect": [
      {
        "run_eocs": [
          {
            "id": "vampire_bloodthirst_lowerlimit",
            "condition": { "math": [ "u_vitamin('hblood_vitamin')", "<=", "0" ] },
            "effect": [
              { "math": [ "u_vitamin('hblood_vitamin')", "=", "0" ] }
            ]
          },
          {
            "id": "vampire_bloodthirst_veryhigh",
            "condition": { "math": [ "u_vitamin('hblood_vitamin')", "<", "144" ] },
            "effect": [
              { "u_lose_effect": "bloodthirst_low" },
              { "u_lose_effect": "bloodthirst_medium" },
              { "u_lose_effect": "bloodthirst_high" },
              { "u_add_effect": "bloodthirst_veryhigh", "duration": "1 hour" }
            ]
          },
          {
            "id": "vampire_bloodthirst_high",
            "condition": {
              "and": [
                { "math": [ "u_vitamin('hblood_vitamin')", ">=", "145" ] },
                { "math": [ "u_vitamin('hblood_vitamin')", "<", "288" ] }
              ]
            },
            "effect": [
              { "u_lose_effect": "bloodthirst_low" },
              { "u_lose_effect": "bloodthirst_medium" },
              { "u_lose_effect": "bloodthirst_veryhigh" },
              { "u_add_effect": "bloodthirst_high", "duration": "1 hour" }
            ]
          },
          {
            "id": "vampire_bloodthirst_medium",
            "condition": {
              "and": [
                { "math": [ "u_vitamin('hblood_vitamin')", ">=", "289" ] },
                { "math": [ "u_vitamin('hblood_vitamin')", "<", "432" ] }
              ]
            },
            "effect": [
              { "u_lose_effect": "bloodthirst_low" },
              { "u_lose_effect": "bloodthirst_high" },
              { "u_lose_effect": "bloodthirst_veryhigh" },
              { "u_add_effect": "bloodthirst_medium", "duration": "1 hour" }
            ]
          },
          {
            "id": "vampire_bloodthirst_low",
            "condition": {
              "and": [
                { "math": [ "u_vitamin('hblood_vitamin')", ">=", "433" ] },
                { "math": [ "u_vitamin('hblood_vitamin')", "<", "576" ] }
              ]
            },
            "effect": [
              { "u_lose_effect": "bloodthirst_medium" },
              { "u_lose_effect": "bloodthirst_high" },
              { "u_lose_effect": "bloodthirst_veryhigh" },
              { "u_add_effect": "bloodthirst_low", "duration": "1 hour" }
            ]
          },
          {
            "id": "vampire_bloodthirst_verylow",
            "condition": { "and": [ { "math": [ "u_vitamin('hblood_vitamin')", ">=", "577" ] } ] },
            "effect": [
              { "u_lose_effect": "bloodthirst_low" },
              { "u_lose_effect": "bloodthirst_medium" },
              { "u_lose_effect": "bloodthirst_high" },
              { "u_lose_effect": "bloodthirst_veryhigh" }
            ]
          }
        ]
      }
    ],
    "//": "The hblood_vitamin decays by 1 point every 20 min, so 72 points equals 24 hours of not consuming human blood/flesh",
    "//2": "Each blood thirst tier consists of two days of not consumining blood",
    "//3": "This means that, assuming the little vampires start at the lower boundary of day 0 (648), they can go up to 24 hours with no thirst (reach 576), and then get increasing thirst every two days, peaking at one week (144) without consumption",
    "//4": "Upper boundary set at hblood_vitamin itself"
  },
  {
    "id": "vampiric_drain_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_melee_attacks_monster",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_REMI" },
        { "u_has_effect": "aura_vampiric" },
        { "math": [ "_hits", "!=", "0" ] }
      ]
    },
    "effect": [ 
      { "math": [ "var_remidrain", "=", "rng( ( (u_skill('stabbing') * 0.525 ) + (u_skill('melee') * 0.525 ) + 1.3 ), ( (u_skill('stabbing') * 1.050 ) + (u_skill('melee') * 1.050 ) + 2.6 ) ) * 0.66" ] }, 
      { "u_cast_spell": { "id": "vampiric_drain_spell" } }
    ],
    "//": "This checks how much dmg has Remi done, sets the var_HEAL to 66% of that and casts the healing spell",
    "//note": "Optimally, this would heal proportionally to the dmg done, but there's no way to track that without a custom dmg type",
    "//note2": "And to track it by custom dmg an ITEM_DAMAGE_X enchant is required"
  },
  {
    "id": "flight_gain_effect_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_gains_effect",
    "condition": {
      "or": [
        { "compare_string": [ "flight_hellraven_effect", { "context_val": "effect" } ] },
        { "compare_string": [ "flight_tengucrow_effect", { "context_val": "effect" } ] },
        { "compare_string": [ "flight_vampire_effect", { "context_val": "effect" } ] }
      ]
    },
    "effect": [
      { "math": [ "u_spell_level('fly_upwards')", "=", "1" ] },
      { "math": [ "u_spell_level('fly_downwards')", "=", "1" ] },
      { 
        "run_eocs": [ 
          {
            "id": "flight_gain_vampire_effect_eoc",
            "condition": { "u_has_effect": "flight_vampire_effect" },
            "effect": [ { "u_add_trait": "WINGS_TOUHOU_VAMPIRE_bat_mode" } ]
          }
        ]
      }
    ],
    "//": "This adds the flight up + down spells if the character gets the flight effect, and adds the 'bat mode' trait if the character got the vampire flying effect"
  },
  {
    "id": "flight_lose_effect_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_loses_effect",
    "condition": {
      "or": [
        { "compare_string": [ "flight_hellraven_effect", { "context_val": "effect" } ] },
        { "compare_string": [ "flight_tengucrow_effect", { "context_val": "effect" } ] },
        { "compare_string": [ "flight_vampire_effect", { "context_val": "effect" } ] }
      ]
    },
    "effect": [
      { "math": [ "u_spell_level('fly_upwards')", "=", "-1" ] },
      { "math": [ "u_spell_level('fly_downwards')", "=", "-1" ] },
      { "u_lose_trait": "WINGS_TOUHOU_VAMPIRE_bat_mode" }
    ],
    "//": "This removes the flight up + down spells and any flight-related traits if the character loses the flight effect"
  },
  {
    "id": "youmu_insightfulsword_hit_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_takes_damage",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_YOUMU" },
        { "math": [ "u_var_insightfulsword", ">", "0" ] }
      ]
    },
    "effect": [ 
      { "u_lose_effect": "parry_effect" },
      { "math": [ "u_var_insightfulsword", "=", "0" ] },
      { "run_eocs": [ "youmu_insightfulsword_check" ] }
    ],
    "//": "Similar to meiling_mountainbreak_hit_eoc , only checks which is Youmu's highest damage type with the EOC",
    "//2": "The dodge-detection component is at buff_youmu_ondodge_eoc "
  }
]
