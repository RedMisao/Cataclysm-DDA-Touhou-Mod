[
  {
    "id": "touhou_everything_eoc",
    "type": "effect_on_condition",
    "eoc_type": "SCENARIO_SPECIFIC",
    "effect": [
      {
        "run_eocs": [
          {
            "id": "kaenbyou_starting_soulshards",
            "condition": { 
              "or": [ 
                { "u_has_trait": "KASHA_SPECIES" }, 
                { "u_has_trait": "KASHA_SPECIES_active" }
              ]
            },
            "effect": [ { "math": [ "u_var_soulshard", "+=", "2 + rand(2)" ] } ],
            "//2": "Adds 2 - 4 soulshards"
          },
          {
            "id": "kokoro_stance_set",
            "condition": { "u_has_trait": "PROF_KOKORO" },
            "effect": [
              { "math": [ "var_kokoro_stance", "=", "1" ] },
              { "math": [ "var_kokoro_mask", "=", "rand(3)" ] },
              { "math": [ "var_kokoro_unstable_rnd", "=", "rand(1)" ] },
              { "run_eocs": [ "kokoro_mask_eocs" ] },
              { "run_eocs": [ "kokoro_timer_eoc" ] }
            ],
            "//2": "The first EOC runs the default condition for Kokoro: 'base' stance plus random mask",
            "//3": "The second EOC runs the timer for the mask duration and automatic rotation"
          },
          {
            "id": "vampire_bloodthirst_start",
            "condition": { "u_has_trait": "VAMPIRE_SPECIES" },
            "effect": [
              { "math": [ "u_vitamin('hblood_vitamin')", "=", "648 + rand(144)" ] }
            ],
            "//": "Adds hblood_vitamin for VAMPIRE_SPECIES plus a smaller random amount, see vampire_bloodthirst_eoc below"
          }
        ]
      }
    ]
  },
  {
    "id": "wield_weapon_dmg_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_wields_item", 
    "effect": [ 
      {
        "u_run_inv_eocs": "all",
        "search_data": [ { "wielded_only": true } ],
        "true_eocs": [
          {
            "id": "wield_weapon_dmg_eoc2",
            "effect": [
              { "math": [ "var_melee_bash_dmg", "=", "n_melee_damage('bash')" ] },
              { "math": [ "var_melee_cut_dmg", "=", "n_melee_damage('cut')" ] },
              { "math": [ "var_melee_stab_dmg", "=", "n_melee_damage('stab')" ] },
              { "math": [ "var_melee_all_dmg", "=", "n_melee_damage('ALL')" ] },
              { "math": [ "var_melee_phys_dmg", "=", "var_melee_bash_dmg + var_melee_cut_dmg + var_melee_stab_dmg" ] },
              { "math": [ "var_gun_dmg", "=", "n_gun_damage('ALL')" ] }
            ]
          }
        ]
      }
    ],
    "//": "Thank you so much andrei8l for #71234 !!!",
    "//2": "Note: this is automatic but only detects wielding/unwielding actions, things like 'type: transform' from use_action don't update the values. If this becomes a problem update the value check every time the spell is cast"
  },
  {
    "id": "utsuho_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_OKUU" },
    "effect": [
        { "math": [ "var_hellcannon_dmg", "=", "( (u_skill('dodge') * 26.4 ) - 19.8 )" ] },
        { "math": [ "var_hellcannon_range", "=", "( (u_skill('dodge') * 1.5 ) + 6 )" ] },
        { "math": [ "var_hellcannon_unc_dmg", "=", "( ( (u_skill('dodge') * 26.4 ) - 19.8 ) * 2 )" ] },
        { "math": [ "var_hellcannon_unc_range", "=", "( (u_skill('dodge') * 1.5 ) + 6 )" ] }
    ],
    "//": "This automatically sets the vars each time Utsuho opens the 'cast spell' window"
  },
  {
    "id": "yamame_opens_spellbook_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "opens_spellbook",
    "condition": { "u_has_trait": "PROF_YAMAME" },
    "effect": [
        { "math": [ "var_icypyrexia_dmg", "=", "( (u_skill('speech') * 0.15 ) + (u_skill('dodge') * 0.15 ) + 0.8 )" ] },
        { "math": [ "var_scarletplague_dmg", "=", "( (u_skill('speech') * 0.15 ) + (u_skill('dodge') * 0.15 ) + 0.8 )" ] },
        { "math": [ "var_unconstrainedrot_dmg", "=", "( (u_skill('speech') * 0.15 ) + (u_skill('dodge') * 0.15 ) + 0.8 )" ] },
        { "math": [ "var_unconstrainedrot2_dmg", "=", "( (u_skill('speech') * 0.15 ) + (u_skill('dodge') * 0.15 ) - 1.2 )" ] },
        { "math": [ "var_disease_duration", "=", "( (u_skill('speech') * 30 ) + (u_skill('dodge') * 30 ) + 1260 )" ] }
    ],
    "//": "This automatically sets the vars each time Yamame opens the 'cast spell' window. Tried chaining a subpsell for yamame_disease_epidemic_eoc with 'self' EOC but it didn't trigger (for her)"
  },
  {
    "id": "soulshard_eoc",
    "type": "effect_on_condition",
    "eoc_type": "EVENT",
    "required_event": "character_kills_monster",
    "condition": {
      "and": [ 
        { 
          "or": [ 
            { "u_has_trait": "KASHA_SPECIES" }, 
            { "u_has_trait": "KASHA_SPECIES_active" }
          ]
        },
        { 
          "or": [ 
            { "npc_has_species": "FERAL" }, 
            { "npc_has_species": "FUNGUS" }, 
            { "npc_has_species": "HUMAN" }, 
            { "npc_has_species": "NETHER" }, 
            { "npc_has_species": "ZOMBIE" } 
          ] 
        },
        { "math": [ "u_var_soulshard", "<", "16" ] }
      ]
    },
    "effect": [ 
      { "math": [ "u_var_soulshard", "+=", "1" ] },
      { "u_message": "You gained a soulshard", "type": "mixed" }
    ],
    "//": "Simple EOC checks when a Kasha kills anything, if it's humanoid or close enough it adds the u_var "
  },
  {
    "id": "kokoro_morale_eoc",
    "type": "effect_on_condition",
    "recurrence": "1 s",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_KOKORO" },
        { "not": { "math": [ "u_val('morale')", "==", "0" ] } }
      ]
    },
    "deactivate_condition": { "not": { "u_has_trait": "PROF_KOKORO" } },
    "effect": [
      {
        "run_eocs": [
          {
            "id": "kokoro_morale_add",
            "condition": { "math": [ "u_val('morale')", "<", "0" ] },
            "effect": [ 
                { "math": [ "u_val('morale')", "+=", "1" ] },
                { "math": [ "var_kokoro_instability", "+=", "1" ] },
                { "math": [ "u_val('mana')", "+=", "2" ] }
            ]
          },
          {
            "id": "kokoro_morale_remove",
            "condition": { "math": [ "u_val('morale')", ">", "0" ] },
            "effect": [ 
                { "math": [ "u_val('morale')", "-=", "1" ] },
                { "math": [ "var_kokoro_instability", "+=", "1" ] },
                { "math": [ "u_val('mana')", "+=", "2" ] }
            ]
          }
        ]
      },
      { "u_lose_morale": "morale_food_good" },
      { "u_lose_morale": "morale_food_hot" },
      { "u_lose_morale": "morale_chat" },
      { "u_lose_morale": "morale_ate_with_table" },
      { "u_lose_morale": "morale_ate_without_table" },
      { "u_lose_morale": "morale_music" },
      { "u_lose_morale": "morale_honey" },
      { "u_lose_morale": "morale_game" },
      { "u_lose_morale": "morale_marloss" },
      { "u_lose_morale": "morale_mutagen" },
      { "u_lose_morale": "morale_feeling_good" },
      { "u_lose_morale": "morale_support" },
      { "u_lose_morale": "morale_photos" },
      { "u_lose_morale": "morale_craving_nicotine" },
      { "u_lose_morale": "morale_craving_caffeine" },
      { "u_lose_morale": "morale_craving_alcohol" },
      { "u_lose_morale": "morale_craving_opiate" },
      { "u_lose_morale": "morale_craving_speed" },
      { "u_lose_morale": "morale_craving_cocaine" },
      { "u_lose_morale": "morale_craving_crack" },
      { "u_lose_morale": "morale_craving_mutagen" },
      { "u_lose_morale": "morale_craving_diazepam" },
      { "u_lose_morale": "morale_craving_marloss" },
      { "u_lose_morale": "morale_food_bad" },
      { "u_lose_morale": "morale_cannibal" },
      { "u_lose_morale": "morale_demicannibal" },
      { "u_lose_morale": "morale_vegetarian" },
      { "u_lose_morale": "morale_antiveggy" },
      { "u_lose_morale": "morale_meatarian" },
      { "u_lose_morale": "morale_antimeat" },
      { "u_lose_morale": "morale_antifruit" },
      { "u_lose_morale": "morale_lactose" },
      { "u_lose_morale": "morale_antijunk" },
      { "u_lose_morale": "morale_antiwheat" },
      { "u_lose_morale": "morale_sweettooth" },
      { "u_lose_morale": "morale_no_digest" },
      { "u_lose_morale": "morale_wet" },
      { "u_lose_morale": "morale_dried_off" },
      { "u_lose_morale": "morale_cold" },
      { "u_lose_morale": "morale_hot" },
      { "u_lose_morale": "morale_feeling_bad" },
      { "u_lose_morale": "morale_bad_protein_bar" },
      { "u_lose_morale": "morale_killed_innocent" },
      { "u_lose_morale": "morale_killed_friend" },
      { "u_lose_morale": "morale_killed_monster" },
      { "u_lose_morale": "morale_mutilate_corpse" },
      { "u_lose_morale": "morale_mutagen_elf" },
      { "u_lose_morale": "morale_mutagen_chimera" },
      { "u_lose_morale": "morale_mutagen_mutation" },
      { "u_lose_morale": "morale_moodswing" },
      { "u_lose_morale": "morale_book" },
      { "u_lose_morale": "morale_comfy" },
      { "u_lose_morale": "morale_scream" },
      { "u_lose_morale": "morale_perm_masochist" },
      { "u_lose_morale": "morale_perm_radiophile" },
      { "u_lose_morale": "morale_perm_noface" },
      { "u_lose_morale": "morale_perm_fpmode_on" },
      { "u_lose_morale": "morale_perm_hoarder" },
      { "u_lose_morale": "morale_perm_fancy" },
      { "u_lose_morale": "morale_perm_optimist" },
      { "u_lose_morale": "morale_perm_badtemper" },
      { "u_lose_morale": "morale_perm_numb" },
      { "u_lose_morale": "morale_perm_constrained" },
      { "u_lose_morale": "morale_perm_nomad" },
      { "u_lose_morale": "morale_game_found_kitten" },
      { "u_lose_morale": "morale_haircut" },
      { "u_lose_morale": "morale_shave" },
      { "u_lose_morale": "morale_vomited" },
      { "u_lose_morale": "morale_play_with_pet" },
      { "u_lose_morale": "morale_pyromania_startfire" },
      { "u_lose_morale": "morale_pyromania_nearfire" },
      { "u_lose_morale": "morale_pyromania_nofire" },
      { "u_lose_morale": "morale_killer_has_killed" },
      { "u_lose_morale": "morale_killer_need_to_kill" },
      { "u_lose_morale": "morale_perm_filthy" },
      { "u_lose_morale": "morale_butcher" },
      { "u_lose_morale": "morale_gravedigger" },
      { "u_lose_morale": "morale_funeral" },
      { "u_lose_morale": "morale_tree_communion" },
      { "u_lose_morale": "morale_accomplishment" },
      { "u_lose_morale": "morale_failure" },
      { "u_lose_morale": "morale_nightmare" },
      { "u_lose_morale": "morale_migo_bio_tech" },
      { "u_lose_morale": "morale_impossible_shape" },
      { "u_lose_morale": "morale_afs_drugs" }
    ],
    "//": "Turns morale into mana, only for Kokoro, deactivates if her morale is zero, also removes ALL morale_type , except for morale_perm_debug ",
    "//2": "Works good enough to remove endpoint morale like 'protein rations', but for continous stuff like 'wet' it keeps removing as long as she's wet"
  },
  {
    "id": "kokoro_timer_eoc",
    "type": "effect_on_condition",
    "recurrence": "15 s",
    "condition": { "u_has_trait": "PROF_KOKORO" },
    "effect": [ 
        { "math": [ "var_kokoro_timer", "-=", "15" ] },
        { "run_eocs": [ "kokoro_instability_check_eoc" ] }
    ],
    "deactivate_condition": { "not": { "u_has_trait": "PROF_KOKORO" } },
    "//": "Reduces var_kokoro_timer every 15 s and checks if she has enough instability"
  },
  {
    "id": "celestial_stance_check",
    "type": "effect_on_condition",
    "recurrence": "1 s",
    "condition": {
      "and": [
        { "u_has_trait": "celestial_stance_mut" },
        { "not": { "u_using_martial_art": "style_celestial_brawling_tenko" } }
      ]
    },
    "deactivate_condition": { "not": { "u_has_trait": "celestial_stance_mut" } },
    "effect": [ 
      { "u_lose_trait": "celestial_stance_mut" }
    ],
    "//": "This removes the knockback and knockdown immunity of Tenko's MA if she's not using it"
  },
  {
    "id": "mokou_death_eoc",
    "type": "effect_on_condition",
    "eoc_type": "PREVENT_DEATH",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_MOKOU" },
        { "math": [ "var_mokoudeath", "<", "rand(504)" ] }
      ]
    },
    "effect": [
      { "u_message": "Too bad you can't actually die for good.", "popup": true },
      { "u_lose_trait": "PORTAL_RESURRECTION" },
      { "u_add_effect": "mokou_resurrectcleanse", "duration": "6 s" },
      { "u_add_effect": "mokou_resurrectpain", "duration": "168 hours" },
      { "math": [ "u_hp('ALL')", "=", "100" ] },
      { "u_cast_spell": { "id": "mokou_resurrectionphoenix" }, "targeted": false },
      { "math": [ "var_mokoudeath", "+=", "168" ] },
      { "math": [ "u_val('fatigue')", "=", "0" ] },
      { "math": [ "u_val('mana')", "=", "800" ] },
      { "math": [ "u_pain()", "=", "0" ] }
    ],
    "//": "This eoc enables PROF_MOKOU to resurrect/revive. Every time Mokou dies she gets var_mokoudeath, which lasts for 7 days and decreases slowly over time. Every time she revives, the value is checked vs a random number, so the more she dies in a short time the harder it is for her to not give up for real",
    "//2": "ANY trait that revives the character should be lost every time Mokou dies. So far, it's just PORTAL_RESURRECTION "
  },
  {
    "id": "mokou_resurrect_counter_eoc",
    "type": "effect_on_condition",
    "recurrence": "1 hour",
    "condition": {
      "and": [
        { "u_has_trait": "PROF_MOKOU" },
        { "math": [ "var_mokoudeath", ">", "0" ] }
      ]
    },
    "deactivate_condition": { "math": [ "var_mokoudeath", "<=", "0" ] },
    "effect": [ 
        { "math": [ "var_mokoudeath", "-=", "1" ] } 
    ],
    "//": "Reduces var_mokoudeath over time"
  },
  {
    "id": "vampire_bloodthirst_eoc",
    "type": "effect_on_condition",
    "recurrence": "1 hour",
    "condition": { "u_has_trait": "VAMPIRE_SPECIES" },
    "effect": [
      {
        "run_eocs": [
          {
            "id": "vampire_bloodthirst_lowerlimit",
            "condition": { "math": [ "u_vitamin('hblood_vitamin')", "<=", "0" ] },
            "effect": [
              { "math": [ "u_vitamin('hblood_vitamin')", "=", "0" ] }
            ]
          },
          {
            "id": "vampire_bloodthirst_veryhigh",
            "condition": { "math": [ "u_vitamin('hblood_vitamin')", "<", "144" ] },
            "effect": [
              { "u_lose_effect": "bloodthirst_low" },
              { "u_lose_effect": "bloodthirst_medium" },
              { "u_lose_effect": "bloodthirst_high" },
              { "u_add_effect": "bloodthirst_veryhigh", "duration": "1 hour" }
            ]
          },
          {
            "id": "vampire_bloodthirst_high",
            "condition": {
              "and": [
                { "math": [ "u_vitamin('hblood_vitamin')", ">=", "145" ] },
                { "math": [ "u_vitamin('hblood_vitamin')", "<", "288" ] }
              ]
            },
            "effect": [
              { "u_lose_effect": "bloodthirst_low" },
              { "u_lose_effect": "bloodthirst_medium" },
              { "u_lose_effect": "bloodthirst_veryhigh" },
              { "u_add_effect": "bloodthirst_high", "duration": "1 hour" }
            ]
          },
          {
            "id": "vampire_bloodthirst_medium",
            "condition": {
              "and": [
                { "math": [ "u_vitamin('hblood_vitamin')", ">=", "289" ] },
                { "math": [ "u_vitamin('hblood_vitamin')", "<", "432" ] }
              ]
            },
            "effect": [
              { "u_lose_effect": "bloodthirst_low" },
              { "u_lose_effect": "bloodthirst_high" },
              { "u_lose_effect": "bloodthirst_veryhigh" },
              { "u_add_effect": "bloodthirst_medium", "duration": "1 hour" }
            ]
          },
          {
            "id": "vampire_bloodthirst_low",
            "condition": {
              "and": [
                { "math": [ "u_vitamin('hblood_vitamin')", ">=", "433" ] },
                { "math": [ "u_vitamin('hblood_vitamin')", "<", "576" ] }
              ]
            },
            "effect": [
              { "u_lose_effect": "bloodthirst_medium" },
              { "u_lose_effect": "bloodthirst_high" },
              { "u_lose_effect": "bloodthirst_veryhigh" },
              { "u_add_effect": "bloodthirst_low", "duration": "1 hour" }
            ]
          },
          {
            "id": "vampire_bloodthirst_verylow",
            "condition": { "and": [ { "math": [ "u_vitamin('hblood_vitamin')", ">=", "577" ] } ] },
            "effect": [
              { "u_lose_effect": "bloodthirst_low" },
              { "u_lose_effect": "bloodthirst_medium" },
              { "u_lose_effect": "bloodthirst_high" },
              { "u_lose_effect": "bloodthirst_veryhigh" }
            ]
          },
          {
            "id": "vampire_bloodthirst_upperlimit",
            "condition": { "math": [ "u_vitamin('hblood_vitamin')", ">=", "792" ] },
            "effect": [
              { "math": [ "u_vitamin('hblood_vitamin')", "=", "792" ] }
            ]
          }
        ]
      }
    ],
    "//": "hblood_vitamin decays 1 point every 20 min, so 72 points equals 24 hours of not consuming human blood/flesh",
    "//2": "Boundaries for each blood thirst tier are: 0 (including excess) - 24 h (no thirst), 1 - 3 days (low), 3 - 5 days (medium), 5 - 7 days (high), >7 days (veryhigh)",
    "//3": "This means that, assuming the little vampires start at the lower boundary of day 0 (648), they can go up to 24 hours with no thirst (reach 576), and then get increased thirst every two days, peaking at one week (144) without consumption"
  }
]
